parameters:
  - name: backendKey
  - name: backendResourceGroup
  - name: terraformDirectory
  - name: planName
  - name: extraFile
  - name: keyvaultName
  - name: secretName
  - name: azureSubscription

steps:
    - task: AzureCLI@2
      name: ParseSecretStep
      displayName: "Fetch JSON Secret and Set Output Variables"
      inputs:
        azureSubscription: ${{ parameters.azureSubscription }}
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          set -e

          echo "Fetching secret from Key Vault: ${{ parameters.keyvaultName }}"

          SECRET_JSON=$(az keyvault secret show \
            --vault-name ${{ parameters.keyvaultName }} \
            --name "${{ parameters.secretName }}" \
            --query value -o tsv)

          echo "Secret JSON: $SECRET_JSON"

          # Parse JSON into variables
          STORAGE_ACCOUNT_NAME=$(echo $SECRET_JSON | jq -r '.storage_account_name')
          STORAGE_CONTAINER_NAME=$(echo $SECRET_JSON | jq -r '.storage_container_name')
          ARM_CLIENT_SECRET=$(echo $SECRET_JSON | jq -r '.service_principal_secret')
          ARM_SUBSCRIPTION_ID=$(echo $SECRET_JSON | jq -r '.subscription_id')
          ARM_CLIENT_ID=$(echo $SECRET_JSON | jq -r '.service_principal_id')
          KEYVAULT_NAME=$(echo $SECRET_JSON | jq -r '.key_vault_name')
          SUBSCRIPTION_NAME=$(echo $SECRET_JSON | jq -r '.subscription_name')

          echo "##vso[task.setvariable variable=STORAGE_ACCOUNT_NAME]$STORAGE_ACCOUNT_NAME"
          echo "##vso[task.setvariable variable=STORAGE_CONTAINER_NAME]$STORAGE_CONTAINER_NAME"
          echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$ARM_CLIENT_SECRET"
          echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$ARM_SUBSCRIPTION_ID"
          echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$ARM_CLIENT_ID"
          echo "##vso[task.setvariable variable=KEYVAULT_NAME]$KEYVAULT_NAME"
          echo "##vso[task.setvariable variable=SUBSCRIPTION_NAME]$SUBSCRIPTION_NAME"

    - script: |
        mkdir -p ./gnuhome
        export GNUPGHOME="$(Pipeline.Workspace)/${{ parameters.planName }}-artifact/gnuhome"
        gpg --yes --batch --passphrase=$(pipelineEncrypt) ${{ parameters.planName }}.tar.gpg 2>/dev/null
      displayName: Artifact Decryption
      workingDirectory: $(Pipeline.Workspace)/${{ parameters.planName }}-artifact

    - task: ExtractFiles@1
      inputs:
        archiveFilePatterns: $(Pipeline.Workspace)/${{ parameters.planName }}-artifact/${{ parameters.planName }}.tar
        destinationFolder: ./${{ parameters.terraformDirectory }}

    - task: AzureCLI@2
      displayName: Apply Terraform
      name: tf_apply
      inputs:
        azureSubscription: ${{ parameters.azureSubscription }}
        addSpnToEnvironment: true
        failOnStandardError: true
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          export ARM_CLIENT_ID=$ARM_CLIENT_ID
          export ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET
          export ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID
          export TF_VAR_local_admin_password="$(local_admin_password)"
          export TF_VAR_deployment_user_password="$(deployment_user_password)"

          # Apply Terraform
          terraform apply -no-color -input=false ${{ parameters.planName }}.plan
        workingDirectory: ${{ parameters.terraformDirectory }}
